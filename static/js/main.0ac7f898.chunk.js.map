{"version":3,"sources":["components/layout/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","concat","Object","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","console","log","delete","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","color","float","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","classname","htmlFor","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","objectSpread","_","isEmpty","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","App","Context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ac7f898.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add contact\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        contacts: state.contacts.filter(contact => {\r\n          return contact.id !== action.payload;\r\n        })\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        contacts: state.contacts.map(contact => {\r\n          return contact.id === action.payload.id ? action.payload : contact;\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => {\r\n        return reducer(state, action);\r\n      });\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onShowClick = e => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    console.log(id);\r\n    // axios\r\n    //   .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    //   .then(res => {\r\n    //     console.log(res);\r\n    //     dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    //   });\r\n\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { name, email, phone, id } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  onClick={this.onShowClick}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ color: \"red\", float: \"right\", cursor: \"pointer\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      color: \"black\",\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h4 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h4>\r\n              {contacts.map(contact => {\r\n                return <Contact key={contact.id} contact={contact} />;\r\n              })}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TextInputGroup({\r\n  label,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) {\r\n  const errorClassname = \" is-invalid\";\r\n  let classname = \"form-control form-control-lg\";\r\n  if (error) {\r\n    classname += errorClassname;\r\n  }\r\n  return (\r\n    <div className=\"form-group invalid\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classname}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <div className=\"invalid-feedback\">{error}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    let errors = {};\r\n\r\n    if (name === \"\") {\r\n      errors = { name: \"Name is required\" };\r\n    }\r\n    if (email === \"\") {\r\n      errors = { ...errors, email: \"Email is required\" };\r\n    }\r\n    if (phone === \"\") {\r\n      errors = { ...errors, phone: \"Phone is required\" };\r\n    }\r\n\r\n    console.log(_.isEmpty(errors));\r\n\r\n    if (!_.isEmpty(errors)) {\r\n      this.setState({ errors: errors });\r\n    } else {\r\n      const newContact = {\r\n        name,\r\n        email,\r\n        phone\r\n      };\r\n\r\n      const res = await axios.post(\r\n        \"https://jsonplaceholder.typicode.com/users\",\r\n        newContact\r\n      );\r\n\r\n      dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n      this.setState({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n      });\r\n\r\n      this.props.history.push(\"/\");\r\n    }\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-lg btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    let errors = {};\r\n\r\n    if (name === \"\") {\r\n      errors = { name: \"Name is required\" };\r\n    }\r\n    if (email === \"\") {\r\n      errors = { ...errors, email: \"Email is required\" };\r\n    }\r\n    if (phone === \"\") {\r\n      errors = { ...errors, phone: \"Phone is required\" };\r\n    }\r\n\r\n    console.log(_.isEmpty(errors));\r\n\r\n    if (!_.isEmpty(errors)) {\r\n      this.setState({ errors: errors });\r\n    } else {\r\n      const updContact = {\r\n        name,\r\n        email,\r\n        phone\r\n      };\r\n\r\n      const { id } = this.props.match.params;\r\n\r\n      const res = await axios.put(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`,\r\n        updContact\r\n      );\r\n\r\n      dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n      this.setState({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n      });\r\n\r\n      this.props.history.push(\"/\");\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const { name, email, phone } = res.data;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n  }\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-lg btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About us {props.match.params.id}</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> page not found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, this page is not found.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Provider } from \"./Context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"My Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}